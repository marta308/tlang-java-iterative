
aspect SupportApi {
	
	inh String Declaration.qname();
	  eq CompilationUnit.getBody(int i).qname() = getBody(i).getName();
	  eq ClassDeclaration.getBody(int i).qname(){
		  return qname() + "." + getBody(i).getName();
	  }
	  eq MethodDeclaration.getParameters(int i).qname(){
		  return qname() + "." + getParameters(i).getName();
	  }
	  eq MethodDeclaration.getBody(int i).qname(){ 
		  return qname() + "." + ((Declaration)getBody(i)).getName();
	  }
	  
	  syn String Composer.sourceName(){
			String name = getSourceName();
			String[] parts = name.split("\\.");
			StringBuffer newname = new StringBuffer();
			for(int i = 0; i<parts.length; i++){
				if(parts[i].equals("**"))
					newname.append("-1");
				else if(parts[i].matches("\\*[0-9]+"))
					newname.append(parts[i].substring(1));
				else newname.append(parts[i]);
				if(i != parts.length - 1)
					newname.append(".");
			}
			return newname.toString();
		}
		
		syn String Composer.targetName(){
			String name = getTargetName();
			String[] parts = name.split("\\.");
			StringBuffer newname = new StringBuffer();
			for(int i = 0; i<parts.length; i++){
				if(parts[i].equals("**"))
					newname.append("-1");
				else if(parts[i].matches("\\*[0-9]+"))
					newname.append(parts[i].substring(1));
				else newname.append(parts[i]);
				if(i != parts.length - 1)
					newname.append(".");
			}
			return newname.toString();
		}
	  
}