
aspect WellFormedness {
	

	syn boolean Root.isCorrect(){
		for(CompilationUnit cu : getCompilationUnitsList()){
			if(!cu.isCorrect())
				return false;
		}
		return true;
	}
	
	syn boolean CompilationUnit.isCorrect(){
		for (Declaration d : getClassDeclarationList()){
			if(!d.isCorrect())
				return false;
		}
		return true;
	}
	
	syn boolean Statement.isCorrect();
	
	eq ClassDeclaration.isCorrect(){
		if (!this.isCorrectLocal())
			return false;
		for(Statement d : getClassBodyList()){
			if(!(d instanceof Reference)){
				if(!((Declaration)d).isCorrect())
					return false;
			}
		}
		return true;
	}
	
	eq MethodDeclaration.isCorrect(){
		if (!this.isCorrectLocal())
			return false;
		for(Declaration d : getParametersList()){
			if(!d.isCorrect())
				return false;
		}
		for(Statement d : getMethodBodyList()){
			if(!d.isCorrect())
				return false;
		}
		return true;
	}
	
	eq FieldDeclaration.isCorrect(){
		return this.isCorrectLocal();
	}	
	eq DeclarationHook.isCorrect(){
		return this.isCorrectLocal();
	}
	eq Reference.isCorrect(){
		return this.isCorrectLocal();
	}
	
	syn boolean Declaration.isCorrectLocal(){
		return (this == getParent().getParent().lookupNOWC(getName()));
	}
	syn boolean Reference.isCorrectLocal(){
		return lookupRef(getName());
	}
	/*
	syn boolean Declaration.isCorrectLocal(){
		ASTNode parent = getParent().getParent();
		String parentName = "";
		if(parent instanceof ClassDeclaration || parent instanceof MethodDeclaration)
			parentName = ((Declaration)parent).getName() + ".";
		return (this == parent.lookup(parentName + getName()).get(0));
	} */
	
	public boolean Root.checkWellformedness() throws CompositionException{
		if(!isCorrect())
			throw new CompositionException("System wellformedness violated.");
		else return true;
	}
}